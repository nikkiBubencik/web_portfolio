[
    {
        "name": "Reading List Management System",
        "description": "For my Rich Internet Application Development term project, I built a full-featured Angular web application to manage personal reading lists. The app integrates the Open Library API to retrieve book metadata, supports full CRUD functionality using localStorage, and features responsive components for book search, details, reviews, and status tracking. Users can also create and manage multiple custom reading lists.",
        "languages": ["Angular", "TypeScript", "HTML5", "CSS", "Open Library API", "LocalStorage"],
        "codeLink": "https://github.com/nikkiBubencik/CS701_project",
        "link": "https://nikkibubencik.github.io/CS701_project/",
        "image": "./images/reading_list.jpg" 
    },
    {
        "name": "Shopping Cart Application",
        "description": "This application was created as my Server-Side Web Development term project and simulates a shopping cart for a merchant's website. Users can view, search, and sort products by name, description, or price, and add items to their cart. They can place orders and view previous purchases. Admins have all user capabilities plus the ability to add, delete, or update products, and manage user orders. Admins can edit orders by adding/removing products or deleting them. The app checks stock availability when adding items to a cart or order. It supports REST APIs and GraphQL endpoints for products, users, and orders. PassportJS is used for customer registration and authentication.",
        "languages": ["NodeJS", "MongoDB", "GraphQL", "PassportJS"],
        "codeLink": "https://github.com/nikkiBubencik/Shopping_Cart",
        "link": "",
        "image": "./images/shopping_cart.jpg" 
    },
    {
        "name": "Visitor Management",
        "description": "The Visitor Management System is a web application developed using React for the frontend, Python with Flask for the backend, and Excel for data storage. It provides a streamlined process for visitors to sign in, generate a visitor badge, and sign out upon departure. The system maintains visitor records in an Excel spreadsheet, updating entries dynamically as visitors sign in and out.",
        "languages": ["React", "Python", "Flask", "CSS"],
        "codeLink": "",
        "link": "",
        "image": "" 
    },
    {
        "name": "QR Code Component",
        "description": "This is my solution to the QR Code Component challenge on Frontend Mentor. The project was built using HTML and CSS, and focuses on creating a clean, centered QR code card that closely matches the provided design. It's a great beginner-friendly challenge to practice layout, spacing, and responsive design fundamentals.",
        "languages": ["HTML", "CSS"],
        "codeLink": "https://github.com/nikkiBubencik/QR_code_component",
        "link":  "https://nikkibubencik.github.io/QR_code_component/",
        "image": "./images/qr_code_component.jpg"
    },
    {
        "name": "Social Links Profile",
        "description": "This is my solution to the Social Links Profile challenge on Frontend Mentor. The project was built using HTML and CSS, and focuses on creating a clean, centered Prodile card that closely displays my titles and links to my GitHub, LinkedIn, and portfolio. It's a great beginner-friendly challenge to practice layout, spacing, and responsive design fundamentals.",
        "languages": ["HTML", "CSS"],
        "codeLink": "https://github.com/nikkiBubencik/social-links-profile",
        "link":  "https://nikkibubencik.github.io/social-links-profile/",
        "image": "./images/social_links.jpg"
    },
    {
        "name": "Recipe Page",
        "description": "This is my solution to the Recipe Page Maine challenge on Frontend Mentor. The project was built using HTML and CSS, and focuses on creating a clean, centered recipe card. It's a great beginner-friendly challenge to practice layout, spacing, and responsive design fundamentals.",
        "languages": ["HTML", "CSS"],
        "codeLink": "https://github.com/nikkiBubencik/recipe-page-main",
        "link":  "https://nikkibubencik.github.io/recipe-page-main/",
        "image": "./images/recipe.jpg"
    },
    {
        "name": "Book Inventory Database",
        "description": "In collaboration with my team for a database management systems class, we developed a comprehensive book inventory system. This web application enables users to securely log in, manage their reading lists by creating, deleting, viewing, and adding to them, rate and review books, and form reading groups with shared lists. Additionally, users have the capability to invite new members to their groups, enhancing collaborative reading experiences.",
        "languages": ["PHP", "HTML", "CSS", "SQL"],
        "codeLink": "https://github.com/nbubencik/BookInventory1",
        "link": "",
        "image": "" 
    },
    {
        "name": "The Joy of Programming Portfolio",
        "description": "This website was built using HTML and CSS to showcase a collection of JavaScript programs I developed during my Joy of Programming course. It includes individual pages dedicated to displaying these programs, a final project page, as well as a home page and an about me page.",
        "languages": ["HTML", "CSS", "JavaScript"],
        "codeLink": "https://github.com/nbubencik/nbubencik.github.io",
        "link":  "https://nbubencik.github.io/",
        "image": "./images/106_portfolio.jpg"
    },
    {
        "name": "Money Management",
        "description": "For our software engineering project, our team developed a Python Flask application with integrated frontend components. The application features user-friendly pages allowing users to view account balances, make deposits or withdrawals, manage loans with payoff timelines, and visualize spending trends through graphs.",
        "languages": ["Python", "Flask"],
        "codeLink": "",
        "link": "",
        "image": "" 
    },{
        "name": "Student Loan Payoff Calculator",
        "description": "This tool allows users to input their student loan information, including total amounts and interest rates. Users can choose their preferred repayment method and specify their contribution amount for each payment. The application generates a detailed repayment schedule, showing the timeline for paying off each loan and the date when each loan will be fully settled.",
        "languages": ["Python"],
        "codeLink": "https://github.com/nikkiBubencik/loan_calculator",
        "link": "",
        "image": "" 
    },
    {
        "name": "Plagiarism Checker",
        "description": " Collaborated with my team to create a plagiarism checker that compares the execution time for the Rabin-Karp and Boyer-Moore algorithms. Users can input the specified text and pattern files. If the plagiarism percentage exceeds 70% the user is alerted.",
        "languages": ["C++"],
        "codeLink": "https://github.com/nathyntran/CSC-212_Final_Project",
        "link": "",
        "image": "" 
    },
    {
        "name": "Tic-Tac-Toe",
        "description": "This Tic-Tac-Toe game provides a classic 2-player experience where each player takes turns marking spots on a 3x3 grid. The objective is to be the first player to achieve 3 marks in a row (horizontally, vertically, or diagonally) or to fill the entire board without achieving a win condition, resulting in a draw.",
        "languages": ["Python"],
        "codeLink": "https://github.com/nikkiBubencik/projects/blob/main/python/tic_tac_toe.py",
        "link": "",
        "image": "" 
    },
    {
        "name": "Rock Paper Scissors",
        "description": "This Rock Paper Scissors game is implemented in Python and allows the player to compete against a computer opponent. The player selects their choice between rock, paper, or scissors, and the computer randomly selects its choice. The winner of each round is determined based on the classic rules of the game.",
        "languages": ["Python"],
        "codeLink": "https://github.com/nikkiBubencik/projects/blob/main/python/rock_paper_scissors.py",
        "link": "",
        "image": "" 
    },
    {
        "name": "Snake",
        "description": "This Snake Game is built using the Pygame library in Python. It offers a classic arcade experience where players control a snake to eat food and grow longer while avoiding collisions with the walls and the snake's own body. This game has two different versions, easy or hard mode, where the snake moves faster around the board.",
        "languages": ["Python"],
        "codeLink": "https://github.com/nikkiBubencik/projects/blob/main/python/Snake.py",
        "link": "",
        "image": "" 
    }
]
